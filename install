#!/bin/bash

# Adapted from Zortax' example https://github.com/Zortax/dotfiles/blob/master/install.sh
# By: Jacob Bechmann Pedersen
# Date: 2019-01-29
# License: MIT (See LICENSE)

USER=$(whoami)
INSTALL_PATH=$(pwd)
USER_PATH=/home/$USER

if [[ $USER == "root" ]]; then
	USER_PATH=/root
fi

# Function to pick the submodules:

ask() {
	while true; do
		if [ "${2:-}" = "Y" ]; then
			prompt="Y/n"
			default=Y
		elif [ "${2:-}" = "N" ]; then
			prompt="y/N"
			default=N
		else
			prompt="y/n"
			default=
		fi
		read -p "$1 [$prompt] " REPLY </dev/tty
		if [ -z "$REPLY" ]; then
			REPLY=$default
		fi
		case "$REPLY" in
			Y*|y*) return 0 ;;
			N*|n*) return 1 ;;
		esac
	done
}

# Install the configs:

# i3

if ask "Install i3 configuration?" Y; then
	if [ ! -d "$USER_PATH/.config/i3/" ]; then
		mkdir "$USER_PATH/.config/i3/"
	fi
	if [ -f "$USER_PATH/.config/i3/config" ]; then
		diff "$USER_PATH/.config/i3/config" "$INSTALL_PATH/i3/config" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "i3 config already installed!"
		else
			echo "Backing up old i3 config..."
			mv "$USER_PATH/.config/i3/config" "$USER_PATH/.config/i3/config.bak"
			echo "Installing i3 config..."
			cp "$INSTALL_PATH/i3/config" "$USER_PATH/.config/i3/config"
		fi
	else
		echo "Installing i3 config..."
		cp "$INSTALL_PATH/i3/config" "$USER_PATH/.config/i3/config"
	fi
fi

# i3status

if ask "Install i3status configuration?" Y; then
	if [ ! -d "$USER_PATH/.config/i3status/" ]; then
		mkdir "$USER_PATH/.config/i3status/"
	fi
	if [ -f "$USER_PATH/.config/i3status/config" ]; then
		diff "$USER_PATH/.config/i3status/config" "$INSTALL_PATH/i3status/config" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "i3status config already installed!"
		else
			echo "Backing up old i3status config..."
			mv "$USER_PATH/.config/i3status/config" "$USER_PATH/.config/i3status/config.bak"
			echo "Installing i3status config..."
			cp "$INSTALL_PATH/i3status/config" "$USER_PATH/.config/i3status/config"
		fi
	else
		echo "Installing i3status config..."
		cp "$INSTALL_PATH/i3status/config" "$USER_PATH/.config/i3status/config"
	fi
fi

# compton

if ask "Install compton configuration?" Y; then
	if [ -f "$USER_PATH/.config/compton.conf" ]; then
		diff "$USER_PATH/.config/compton.conf" "$INSTALL_PATH/compton/compton.conf" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "compton config already installed!"
		else
			echo "Backing up old compton config..."
			mv "$USER_PATH/.config/compton.conf" "$USER_PATH/.config/compton.conf.bak"
			echo "Installing compton config..."
			cp "$INSTALL_PATH/compton/compton.conf" "$USER_PATH/.config/compton.conf"
		fi
	else
		echo "Installing compton config..."
		cp "$INSTALL_PATH/compton/compton.conf" "$USER_PATH/.config/compton.conf"
	fi
fi

# xorg Xresources

if ask "Install Xresources configuration?" Y; then
	if [ -f "$USER_PATH/.Xresources" ]; then
		diff "$USER_PATH/.Xresources" "$INSTALL_PATH/xorg/Xresources" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "Xresources configuration already installed!"
		else
			echo "Backing up old Xresources config..."
			mv "$USER_PATH/.Xresources" "$USER_PATH/.Xresources.bak"
			echo "Installing Xresources config..."
			cp "$INSTALL_PATH/xorg/Xresources" "$USER_PATH/.Xresources"
		fi
	else
		echo "Installing Xresources config..."
		cp "$INSTALL_PATH/xorg/Xresources" "$USER_PATH/.Xresources"
	fi
fi

# xorg xinitrc

if ask "Install xinitrc configuration?" Y; then
	if [ -f "$USER_PATH/.xinitrc" ]; then
		diff "$USER_PATH/.xinitrc" "$INSTALL_PATH/xorg/xinitrc" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "xinitrc configuration already installed!"
		else
			echo "Backing up old xinitrc config..."
			mv "$USER_PATH/.xinitrc" "$USER_PATH/.xinitrc.bak"
			echo "Installing xinitrc config..."
			cp "$INSTALL_PATH/xorg/xinitrc" "$USER_PATH/.xinitrc"
		fi
	else
		echo "Installing xinitrc config..."
		cp "$INSTALL_PATH/xorg/xinitrc" "$USER_PATH/.xinitrc"
	fi
fi

# Bash

if ask "Install bash configuration?" Y; then
	if [ -f "$USER_PATH/.bashrc" ]; then
		diff "$USER_PATH/.bashrc" "$INSTALL_PATH/bash/bashrc" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "bashrc configuration already installed!"
		else
			echo "Backing up old bashrc config..."
			mv "$USER_PATH/.bashrc" "$USER_PATH/.bashrc.bak"
			echo "Installing bashrc config..."
			cp "$INSTALL_PATH/bash/bashrc" "$USER_PATH/.bashrc"
		fi
	else
		echo "Installing bashrc config..."
		cp "$INSTALL_PATH/bash/bashrc" "$USER_PATH/.bashrc"
	fi
fi

# vnc

if ask "Install vnc configuration?" Y; then
	if [ ! -d "$USER_PATH/.vnc/" ]; then
		mkdir "$USER_PATH/.vnc/"
	fi
	if [ -f "$USER_PATH/.vnc/xstartup" ]; then
		diff "$USER_PATH/.vnc/xstartup" "$INSTALL_PATH/vnc/xstartup" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "xstartup config already installed!"
		else
			echo "Backing up old xstartup config..."
			mv "$USER_PATH/.vnc/xstartup" "$USER_PATH/.vnc/xstartup.bak"
			echo "Installing xstartup config..."
			cp "$INSTALL_PATH/vnc/xstartup" "$USER_PATH/.vnc/xstartup"
		fi
	else
		echo "Installing xstartup config..."
		cp "$INSTALL_PATH/vnc/xstartup" "$USER_PATH/.vnc/xstartup"
	fi
fi

# redshift

if ask "Install redshift configuration?" Y; then
	if [ -f "$USER_PATH/.config/redshift.conf" ]; then
		diff "$USER_PATH/.config/redshift.conf" "$INSTALL_PATH/redshift/redshift.conf" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "redshift configuration already installed!"
		else
			echo "Backing up old redshift config..."
			mv "$USER_PATH/.config/redshift.conf" "$USER_PATH/.config/redshift.conf.bak"
			echo "Installing redshift config..."
			cp "$INSTALL_PATH/redshift/redshift.conf" "$USER_PATH/.config/redshift.conf"
		fi
	else
		echo "Installing redshift config..."
		cp "$INSTALL_PATH/redshift/redshift.conf" "$USER_PATH/.config/redshift.conf"
	fi
fi

# qt 

if ask "Install qt configuration?" Y; then
	if [ -f "$USER_PATH/.config/Trolltech.conf" ]; then
		diff "$USER_PATH/.config/Trolltech.conf" "$INSTALL_PATH/qt/Trolltech.conf" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			echo "Trolltech configuration already installed!"
		else
			echo "Backing up old Trolltech config..."
			mv "$USER_PATH/.config/Trolltech.conf" "$USER_PATH/.config/Trolltech.conf.bak"
			echo "Installing Trolltech config..."
			cp "$INSTALL_PATH/qt/Trolltech.conf" "$USER_PATH/.config/Trolltech.conf"
		fi
	else
		echo "Installing Trolltech config..."
		cp "$INSTALL_PATH/qt/Trolltech.conf" "$USER_PATH/.config/Trolltech.conf"
	fi
fi

echo "End of install!"
